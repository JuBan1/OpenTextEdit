{
	"name": "C++",
	"fileExtensions": ["cpp", "c++", "cxx", "h", "hpp", "hxx", "h++", "moc"],
	"keywords": [
		{
			"keywords": ["false", "true", 
						 "nullptr", "this"],
			"type": "SyntaxConstant"
		},
		{
			"keywords": ["char", "double", "float", "int", "long", "short", "signed",
					 	 "unsigned", "void", 
						 "auto", "register", "bool", 
						 "char16_t", "char32_t"],
			"type": "SyntaxType"
		},
		{
			"keywords": ["do", "const", "enum", "union", "extern", "static", "volatile",
					 	 "operator", "private", "protected", "public", "while", "return", "for", 
						 "struct", "break", "continue", "if", "else", "for", "switch", "case",
						 "default", "enum", "goto", "sizeof", "typedef", 
						 "asm", "dynamic_cast",
						 "catch", "class", "const_cast", "delete", "dynamic_cast", "explicit",
						 "friend", "inline", "mutable", "namespace", "new", "operator", "private",
						 "public", "protected", "reinterpret_cast", "static_cast", "template", 
						 "throw", "try", "typeid", "typename", "using", "virtual", "wchar_t",
						 "alignas", "alignof", "constexpr", "decltype", "default", "export",
						 "noexcept", "static_assert", "thread_local", "using", 
						 "and", "and_eq", "bitand", "bitor", "compl", "not", "not_eq", "or", "or_eq",
						 "xor", "xor_eq",
						 "final", "override"],
			"type": "SyntaxKeyword"
		},
		{
			"default": "SyntaxVariable"
		}
	],
	
	"operators": [
		{
			"operators": "(){}[],;",
			"type": "SyntaxSymbol"
		},
		{
			"operators": "+-.%=&*/<>?~^!:|",
			"type": "SyntaxOperator"
		}
	],
	
	"regexRules": [
		{
			"regex": "#\\b\\w*\\b",
			"type": "SyntaxComment"
		},
		{
			"regex": "::",
			"type": "TextEditText"
		},
		{
			"regex": "\\W(\\d+\\w*)",
			"captureGroup": 1,
			"type": "SyntaxNumber"
		},
		{
			"regex": "\"(?:[^\"\\\\]|\\\\.)*\"",
			"type": "SyntaxString"
		},
		{
			"regex": "'(?:[^'\\\\]|\\\\.)*'",
			"type": "SyntaxString"
		}
	],
	"multiLineCommentStart": "/*",
	"multiLineCommentEnd": "*/",
	"singleLineComment": "//"

}